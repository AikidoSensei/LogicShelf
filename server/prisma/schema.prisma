generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Organizations {
  organizationId String @id @default(cuid())
  name           String @unique
  createdAt      DateTime @default(now())
  createdBy      String
  users          Users[] @relation("OrganizationUsers")
}

model Users {
  userId          String @id @default(cuid())
  name            String
  email           String @unique
  role            String // 'ADMIN' or 'STAFF'
  organizationId  String?
  organization    Organizations? @relation("OrganizationUsers", fields: [organizationId], references: [organizationId])
  UserAccounts    UserAccount[]
  Products        Products[] @relation("CreatedBy")
  Sales           Sales[] @relation("SoldBy")
  Purchases       Purchases[] @relation("MadeBy")
}

model UserAccount {
  id        String   @id @default(cuid())
  email     String   @unique
  name String
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    String
  Users     Users    @relation(fields: [userId], references: [userId])
  resetPasswordToken String?
  resetPasswordExpiresAt String?
  verificationToken String?
  verificationTokenExpiresAt String?
}

model Products {
  productId     String @id @default(cuid())
  name          String
  price         Float
  rating        Float?
  stockQuantity Int
  createdBy     String
  createdAt     DateTime @default(now())
  Sales         Sales[]
  Purchases     Purchases[]
  creator       Users @relation("CreatedBy", fields: [createdBy], references: [userId])
}

model Sales {
  saleId      String @id @default(cuid())
  productId   String
  userId      String
  timestamp   DateTime
  quantity    Int
  unitPrice   Float
  totalAmount Float
  product     Products @relation(fields: [productId], references: [productId])
  user        Users @relation("SoldBy", fields: [userId], references: [userId])
}

model Purchases {
  purchaseId String @id @default(cuid())
  productId  String
  userId     String
  timestamp  DateTime
  quantity   Int
  unitCost   Float
  totalCost  Float
  product    Products @relation(fields: [productId], references: [productId])
  user       Users @relation("MadeBy", fields: [userId], references: [userId])
}

model Expenses {
  expenseId String @id @default(cuid())
  category  String
  amount    Float
  userId    String
  timestamp DateTime
}

model SalesSummary {
  salesSummaryId   String @id @default(cuid())
  totalValue       Float
  changePercentage Float?
  date             DateTime
  userId           String
}

model PurchaseSummary {
  purchaseSummaryId String @id @default(cuid())
  totalPurchased    Float
  changePercentage  Float?
  date              DateTime
  userId            String
}

model ExpenseSummary {
  expenseSummaryId  String @id @default(cuid())
  totalExpenses     Float
  date              DateTime
  userId            String
  ExpenseByCategory ExpenseByCategory[]
}

model ExpenseByCategory {
  expenseByCategoryId String @id @default(cuid())
  expenseSummaryId    String
  category            String
  amount              BigInt
  date                DateTime
  expenseSummary      ExpenseSummary @relation(fields: [expenseSummaryId], references: [expenseSummaryId])
}
